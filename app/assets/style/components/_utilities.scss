// 左邊一點、右邊一點、間格大一點-Spacing
// 文字色彩-color
// 背景色-background
// 對齊方法
// 垂直置中方法
// CSS 屬性：顯示屬性、背景屬性、Position …
// 通常會運用在每個元件上，但每個元件都補上重複性又高

//margin、padding設定
@for $distance from 0 through 12 {
  .p-#{$distance} {
      padding: ($distance * 0.5) + rem;
  }
  .m-#{$distance} {
      margin: ($distance * 0.5) + rem;
  }
}

@each $dir, $dir-value in $direction {
  @for $distance from 0 through 12 {
    .m#{$dir}-#{$distance} {
        margin-#{$dir-value}: ($distance * 0.5) + rem;
    }

    .p#{$dir}-#{$distance} {
        padding-#{$dir-value}: ($distance * 0.5) + rem;
    }
  }
}

@each $size, $size-value in $grid-breakpoints {
  @media screen and (max-width: $size-value) {
    @each $dir, $dir-value in $direction {
      @for $min-distance from 0 through 8 {
        .m#{$dir}-#{$size}-#{$min-distance} {
            margin-#{$dir-value}: #{$min-distance * 0.5}rem;
        }

        .p#{$dir}-#{$size}-#{$min-distance} {
            padding-#{$dir-value}: #{$min-distance * 0.5}rem;
        }
      }
    }
  }
}

@for $distance from 0 through 12 {
  .px-#{$distance} {
      padding-right: ($distance * 0.5) + rem;
      padding-left: ($distance * 0.5) + rem;
  }
  .py-#{$distance} {
      padding-top: ($distance * 0.5) + rem;
      padding-bottom: ($distance * 0.5) + rem;
  }
  .mx-#{$distance} {
      margin-right: ($distance * 0.5) + rem;
      margin-left: ($distance * 0.5) + rem;
  }
  .my-#{$distance} {
      margin-top: ($distance * 0.5) + rem;
      margin-bottom: ($distance * 0.5) + rem;
  }
}

@each $size, $size-value in $grid-breakpoints {
  @media screen and (max-width: $size-value) {
    @for $distance from 0 through 12 {
      .px-#{$size}-#{$distance} {
          padding-right: ($distance * 0.5) + rem;
          padding-left: ($distance * 0.5) + rem;
      }

      .py-#{$size}-#{$distance} {
          padding-top: ($distance * 0.5) + rem;
          padding-bottom: ($distance * 0.5) + rem;
      }
    }
  }
}

@each $size, $size-value in $grid-breakpoints {
  @media screen and (max-width: $size-value) {
    @for $distance from 0 through 12 {
      .mx-#{$size}-#{$distance} {
          margin-right: ($distance * 0.5) + rem;
          margin-left: ($distance * 0.5) + rem;
      }

      .my-#{$size}-#{$distance} {
          margin-top: ($distance * 0.5) + rem;
          margin-bottom: ($distance * 0.5) + rem;
      }
    }
  }
}

@each $size,  $size-value in $line-height{
  .lh-#{$size}{
      line-height: $size-value;
  }
}

.px-12-px {
  padding-left: 12px;
  padding-right: 12px;
}
.py-6-px {
  padding-top: 6px;
  padding-bottom: 6px;
}
.p-4-px {
  padding: 4px;
}
.px-176-px {
  padding-left: 176px;
  padding-right: 176px;
}
.pt-12-px {
  padding-top: 12px;
}
.pb-12-px {
  padding-bottom: 12px;
}
.mr-20-px {
  margin-right: 20px;
}
.mb-36-px {
  margin-bottom: 36px;
}
.text-center{
  text-align: center;
}
.text-right{
  text-align: right;
}
.text-left{
  text-align: left;
}

.p-relative{
  position: relative;
}
.p-absolute{
  position: absolute;
}
.p-fixed{
  position: fixed;
}
.p-sticky{
  position: sticky;
}

.box-shadow {
  box-shadow: 0px 2px 6px #00000029;
}